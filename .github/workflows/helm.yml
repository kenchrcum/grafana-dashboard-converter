name: Release Helm Chart

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'helm/**'
      - '.github/workflows/helm.yml'
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'helm/**'
      - '.github/workflows/helm.yml'

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Run helm lint
        run: |
          cd helm/grafana-dashboard-converter
          helm lint .

      - name: Run helm template
        run: |
          cd helm/grafana-dashboard-converter
          helm template test-release . --dry-run=server

  release:
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: helm
          config: .github/cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  publish-pages:
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create charts directory
        run: mkdir -p charts

      - name: Download released charts
        run: |
          # Download the latest released chart
          wget -q https://github.com/${{ github.repository }}/releases/latest/download/grafana-dashboard-converter-${{ github.event.repository.updated_at || 'latest' }}.tgz -O charts/grafana-dashboard-converter-latest.tgz || true

      - name: Generate index
        run: |
          # Create index.yaml for the Helm repository
          cat > index.yaml << 'EOF'
          apiVersion: v1
          entries:
            grafana-dashboard-converter:
              - apiVersion: v2
                appVersion: "1.0.0"
                created: "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
                description: A Helm chart for deploying Grafana Dashboard Converter
                digest: ""
                home: https://github.com/${{ github.repository }}
                keywords:
                  - grafana
                  - dashboard
                  - converter
                  - kubernetes
                  - operator
                maintainers:
                  - name: ${{ github.repository_owner }}
                    email: ${{ github.repository_owner }}@users.noreply.github.com
                name: grafana-dashboard-converter
                sources:
                  - https://github.com/${{ github.repository }}
                urls:
                  - https://github.com/${{ github.repository }}/releases/latest/download/grafana-dashboard-converter-latest.tgz
                version: latest
          generated: "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
